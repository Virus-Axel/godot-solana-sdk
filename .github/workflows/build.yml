name: üõ†Ô∏è Builds
on:
  push:
  pull_request:
  workflow_dispatch:
jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux-debug
            name: Linux Debug
            runner: ubuntu-latest
            target: template_debug
            platform: linux
            arch: x86_64
            threads: True
          - identifier: linux-release
            name: Linux Release
            runner: ubuntu-latest
            target: template_release
            platform: linux
            arch: x86_64
            threads: True
          - identifier: windows-debug
            name: Windows Debug
            runner: ubuntu-latest
            target: template_debug
            platform: windows
            arch: x86_64
            threads: True
          - identifier: windows-release
            name: Windows Release
            runner: ubuntu-latest
            target: template_release
            platform: windows
            arch: x86_64
            threads: True
          - identifier: android-debug
            name: Android Debug
            runner: ubuntu-latest
            target: template_debug
            platform: android
            arch: arm64
            threads: True
          - identifier: android-release
            name: Android Release
            runner: ubuntu-latest
            target: template_release
            platform: android
            arch: arm64
            threads: True
          - identifier: macos-debug
            runner: macos-latest
            name: üçé macOS (universal) Debug
            target: template_debug
            platform: macos
            arch: universal
            threads: True
          - identifier: macos-release
            runner: macos-latest
            name: üçé macOS (universal) Release
            target: template_release
            platform: macos
            arch: universal
            threads: True
          - identifier: ios-debug
            runner: macos-latest
            name: üçé IOS Debug
            target: template_debug
            platform: ios
            arch: arm64
            threads: True
          - identifier: ios-release
            runner: macos-latest
            name: üçé IOS Release
            target: template_release
            platform: ios
            arch: arm64
            threads: True
          - identifier: web-debug-nothreads
            name: Web Debug (Single Thread)
            runner: ubuntu-latest
            target: template_debug
            platform: web
            arch: wasm32
            threads: False
          - identifier: web-release-nothreads
            name: Web Release (Single Thread)
            runner: ubuntu-latest
            target: template_release
            platform: web
            arch: wasm32
            threads: False
          - identifier: web-debug
            name: Web Debug
            runner: ubuntu-latest
            target: template_debug
            platform: web
            arch: wasm32
            threads: True
          - identifier: web-release
            name: Web Release
            runner: ubuntu-latest
            target: template_release
            platform: web
            arch: wasm32
            threads: True
    steps:
      - name: (Windows) Install mingw64
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        shell: sh
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: (Android) Set up Java 21
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: (Android) Set up Android SDK
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: android-actions/setup-android@v2

      - name: (Android) Install Android Tools
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        shell: sh
        run: |
          "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "build-tools;30.0.3" "platforms;android-29" "cmdline-tools;latest" "cmake;3.10.2.4988404" "ndk;23.2.8568313"

      - name: (Web) Install emsdk toolchain
        if: ${{ startsWith(matrix.identifier, 'web-') }}
        uses: mymindstorm/setup-emsdk@v14
        with:
          # Make sure to set a version number!
          version: 3.1.64

      - name: (Web) Install node
        if: ${{ startsWith(matrix.identifier, 'web-') }}
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: (Web) Update npm
        if: ${{ startsWith(matrix.identifier, 'web-') }}
        run: |
          npm install -g npm@11

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons==4.8
          scons --version

      - name: Checkout project
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Compile extension
        shell: sh

        run: |
          scons threads='${{ matrix.threads }}' target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' -j2
          cp godot-solana-sdk.gdextension bin/
          ls -l */bin/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.identifier }}
          path: |
            ${{ github.workspace }}/bin/

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: ${{ github.event.repository.name }}
          pattern: ${{ github.event.repository.name }}-*
          delete-merged: true

  package:
    runs-on: ubuntu-latest
    needs: merge
    steps:

    - name: Checkout project
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ github.event.repository.name }}
        path: ./bin

    - name: Package Solanakit
      shell: sh
      run: |
        ls -l bin/
        cp -r bin addons/SolanaSDK/
      
    - name: Upload SolanaKit
      uses: actions/upload-artifact@v4
      with:
        name: addons
        path: |
          ${{ github.workspace }}/addons
