name: Run Examples
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
    check_example_directories:
        runs-on: ubuntu-latest
        outputs:
            dir: ${{ steps.set-dirs.outputs.dir }}
        steps:
        - uses: actions/checkout@v2
        - id: set-dirs
          run: echo "::set-output name=dir::$(ls -d example/*/ | jq -R -s -c 'split("\n")[:-1]')"

    run:
        runs-on: ubuntu-latest
        needs: [check_example_directories]
        strategy:
            fail-fast: false
            matrix:
                # List matrix strategy from directories dynamically
                dir: ${{fromJson(needs.check_example_directories.outputs.dir)}}
        steps:
            - name: Set up Python
              uses: actions/setup-python@v2

            - name: Set up SCons
              shell: bash
              run: |
                python -c "import sys; print(sys.version)"
                python -m pip install scons
                scons --version

            - uses: chickensoft-games/setup-godot@v1
              name: ðŸ¤– Setup Godot
              with:
                    version: 4.2.1
                    use-dotnet: false

            - name: Checkout project
              uses: actions/checkout@v2
              with:
                submodules: recursive

            - name: Build binary 
              shell: bash
              run: |
                scons

            - name: Prepare project 
              shell: bash
              run: |
                cp godot-solana-sdk.gdextension bin/
                cd ${{matrix.dir}}
                ln -s ../../bin
                mkdir .godot
                echo "res://bin/godot-solana-sdk.gdextension" >> .godot/extension_list.cfg

            - name: Load Test Accounts
              id: test_accounts
              run: |
                cd ${{matrix.dir}}
                if [ -d "test_accounts" ]; then
                for file in "test_accounts"/*; do
                if [ -f "$file" ]; then
                str="${str} --account `echo -n "${file##*/}" | cut -f 1 -d '.' | tr -d $'\n'` ${{matrix.dir}}${file}"
                fi
                done
                fi
                echo "VALIDATOR_ARGS=${str}" >> "$GITHUB_OUTPUT"

            - name: Setup Local Validator
              uses: switchboard-xyz/solana-local-validator@v0.1
              with:
                solana-version: stable
                cluster: devnet
                args: "${{steps.test_accounts.outputs.VALIDATOR_ARGS}}"

            - name: Test project 
              shell: bash
              run: |
                cd ${{matrix.dir}}
                godot --headless --quit-after 5000 | ( ! grep FAIL)
                exit $?
